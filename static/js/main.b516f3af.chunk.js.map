{"version":3,"sources":["Header/Header.js","Main/Main.js","Footer/Footer.js","TodoForm/TodoForm.js","TodoItem/TodoItem.js","TodoList/TodoList.js","TodoFilter/TodoFilter.js","TodoApp.js","index.js"],"names":["Header","_ref","children","react_default","a","createElement","className","Main","onMarkAllTodo","type","id","onChange","e","htmlFor","Footer","counter","onDeleteAll","concat","onClick","TodoForm","state","title","addTodo","event","preventDefault","_this","_this$props","props","onAdd","todoID","completed","setState","onInputChange","target","value","this","action","onSubmit","placeholder","React","Component","classNames","require","TodoItem","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showEditField","isEdit","updateTodo","onEdit","onDelete","todo","editTodo","textInput","createRef","current","focus","_this2","_this$props2","onComplete","_this$state","todoClassList","editing","checked","onDoubleClick","ref","onBlur","TodoList","todos","map","src_TodoItem_TodoItem","key","TodoFilter","selected","filterTodo","activeFilter","href","split","slice","onFilterClick","isActive","TodoApp","todoList","Math","ceil","random","handleAddTodo","newTodo","prevState","toConsumableArray","handleDeleteTodo","filter","handleEditTodo","newTitle","_objectSpread","handleCompleteTodo","handleFilterTodo","filterValue","toggleAllTodo","deleteAllCompleted","getFilteredTodos","initialState","JSON","parse","localStorage","getItem","setItem","stringify","countCompleted","length","filteredTodoList","src_Header_Header","src_TodoForm_TodoForm","src_Main_Main","src_TodoList_TodoList","src_Footer_Footer","src_TodoFilter_TodoFilter","ReactDOM","render","src_TodoApp","document","getElementById"],"mappings":"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","file":"static/js/main.b516f3af.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ children }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n    {children}\n  </header>\n);\n\nHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Header;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Main = ({ children, onMarkAllTodo }) => (\n  <section className=\"main\">\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      onChange={e => onMarkAllTodo(e)}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    {children}\n  </section>\n);\n\nMain.propTypes = {\n  children: PropTypes.node.isRequired,\n  onMarkAllTodo: PropTypes.func.isRequired,\n};\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = ({ children, counter, onDeleteAll }) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {`${counter} items left`}\n    </span>\n    {children}\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      onClick={() => onDeleteAll()}\n    >\n        clear completed\n    </button>\n  </footer>\n);\n\nFooter.propTypes = {\n  children: PropTypes.node.isRequired,\n  counter: PropTypes.number.isRequired,\n  onDeleteAll: PropTypes.func.isRequired,\n};\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoForm extends React.Component {\n  static propTypes = {\n    todoID: PropTypes.number.isRequired,\n    onAdd: PropTypes.func.isRequired,\n  };\n\n  state = {\n    title: '',\n  };\n\n  addTodo = (event) => {\n    event.preventDefault();\n    const { title } = this.state;\n    const { onAdd, todoID } = this.props;\n\n    if (title) {\n      onAdd({ id: todoID, title, completed: false });\n      this.setState({ title: '' });\n    }\n  };\n\n  onInputChange = ({ target }) => {\n    this.setState({ title: target.value });\n  };\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <form action=\"\" onSubmit={this.addTodo}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.onInputChange}\n          value={title}\n        />\n      </form>\n    );\n  }\n}\nexport default TodoForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nclass TodoItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      title: this.props.todo.title,\n    };\n\n    this.textInput = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.textInput.current.focus();\n  }\n\n  showEditField = () => {\n    this.setState({ isEdit: true });\n  };\n\n  updateTodo = (event) => {\n    event.preventDefault();\n    const { title } = this.state;\n    const { onEdit, onDelete, todo } = this.props;\n\n    if (title) {\n      this.setState({ isEdit: false });\n      onEdit(todo.id, title);\n    } else {\n      onDelete(todo.id);\n    }\n  };\n\n  editTodo = ({ target }) => {\n    this.setState({ title: target.value });\n  };\n\n  render() {\n    const { todo, onDelete, onComplete } = this.props;\n    const { title, isEdit } = this.state;\n    const todoClassList = classNames({\n      completed: todo.completed,\n      editing: isEdit,\n    });\n\n    return (\n      <li className={todoClassList}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={todo.completed}\n            id={todo.id}\n            onChange={() => onComplete(todo.id)}\n          />\n          <label\n            htmlFor=\"todo-1\"\n            onDoubleClick={this.showEditField}\n          >\n            {title}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => onDelete(todo.id)}\n          />\n        </div>\n        <form action=\"\" onSubmit={e => this.updateTodo(e)}>\n          <input\n            type=\"text\"\n            value={title}\n            ref={this.textInput}\n            className=\"edit\"\n            onChange={this.editTodo}\n            onBlur={this.updateTodo}\n          />\n        </form>\n      </li>\n    );\n  }\n}\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  onComplete: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n};\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem/TodoItem';\n\nconst TodoList = ({\n  todos, onComplete, onDelete, onEdit,\n}) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        todo={todo}\n        key={todo.id}\n        onComplete={onComplete}\n        onDelete={onDelete}\n        onEdit={onEdit}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onComplete: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n};\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoFilter extends React.Component {\n  static propTypes = {\n    onFilterClick: PropTypes.func.isRequired,\n  };\n\n  state = {\n    selected: '',\n  };\n\n  filterTodo = (event) => {\n    event.preventDefault();\n    const activeFilter = event.target.href.split('/').slice(-1)[0];\n\n    this.setState({ selected: activeFilter });\n    this.props.onFilterClick(activeFilter);\n  };\n\n  isActive = value => (value === this.state.selected ? 'selected' : '');\n\n  render() {\n    return (\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={this.isActive('')}\n            onClick={this.filterTodo}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className={this.isActive('active')}\n            onClick={this.filterTodo}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className={this.isActive('completed')}\n            onClick={this.filterTodo}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default TodoFilter;\n","import React from 'react';\nimport Header from './Header/Header';\nimport Main from './Main/Main';\nimport Footer from './Footer/Footer';\nimport TodoForm from './TodoForm/TodoForm';\nimport TodoList from './TodoList/TodoList';\nimport TodoFilter from './TodoFilter/TodoFilter';\n\nclass TodoApp extends React.Component {\n  state = {\n    todoList: [],\n    todoID: Math.ceil(Math.random() * 1e8),\n  };\n\n  componentDidMount() {\n    const initialState = JSON.parse(localStorage.getItem('state'));\n\n    if (initialState) {\n      this.setState({ todoList: initialState.todoList });\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('state', JSON.stringify(this.state));\n  }\n\n  handleAddTodo = (newTodo) => {\n    this.setState(prevState => ({\n      todoList: [...prevState.todoList, newTodo],\n      todoID: Math.ceil(Math.random() * 1e8),\n    }));\n  };\n\n  handleDeleteTodo = (id) => {\n    this.setState(prevState => ({\n      todoList: [...prevState.todoList].filter(todo => todo.id !== +id),\n    }));\n  };\n\n  handleEditTodo = (id, newTitle) => {\n    this.setState(prevState => ({\n      todoList: [...prevState.todoList].map(todo => ({\n        ...todo,\n        title: todo.id === id ? newTitle : todo.title,\n      })),\n    }));\n  };\n\n  handleCompleteTodo = (id) => {\n    this.setState(prevState => ({\n      todoList: [...prevState.todoList].map(todo => ({\n        ...todo,\n        completed: todo.id === id ? !todo.completed : todo.completed,\n      })),\n    }));\n  };\n\n  handleFilterTodo = (filterValue) => {\n    this.setState({ filter: filterValue });\n  };\n\n  toggleAllTodo = ({ target }) => {\n    this.setState(prevState => ({\n      todoList: [...prevState.todoList].map(todo => ({\n        ...todo, completed: !!target.checked,\n      })),\n    }));\n  };\n\n  deleteAllCompleted = () => {\n    this.setState(prevState => ({\n      todoList: [...prevState.todoList].filter(todo => !todo.completed),\n    }));\n  };\n\n  getFilteredTodos = (todoList, filter) => {\n    switch (filter) {\n      case 'active':\n        return todoList.filter(todo => !todo.completed);\n      case 'completed':\n        return todoList.filter(todo => todo.completed);\n      default:\n        return todoList;\n    }\n  };\n\n  render() {\n    const { todoList, filter, todoID } = this.state;\n    const countCompleted = todoList.filter(todo => !todo.completed).length;\n    const filteredTodoList = filter\n      ? this.getFilteredTodos(todoList, filter)\n      : todoList;\n\n    return (\n      <section className=\"todoapp\">\n        <Header>\n          <TodoForm todoID={todoID} onAdd={this.handleAddTodo} />\n        </Header>\n\n        <Main onMarkAllTodo={this.toggleAllTodo}>\n          <TodoList\n            todos={filteredTodoList}\n            onComplete={this.handleCompleteTodo}\n            onDelete={this.handleDeleteTodo}\n            onEdit={this.handleEditTodo}\n          />\n        </Main>\n\n        <Footer counter={countCompleted} onDeleteAll={this.deleteAllCompleted}>\n          <TodoFilter onFilterClick={this.handleFilterTodo} />\n        </Footer>\n      </section>\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport TodoApp from './TodoApp';\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}