{"version":3,"sources":["Header/Header.js","Main/Main.js","Footer/Footer.js","TodoForm/TodoForm.js","TodoItem/TodoItem.js","TodoList/TodoList.js","TodoFilter/TodoFilter.js","TodoApp.js","index.js"],"names":["Header","_ref","children","react_default","a","createElement","className","Main","onMarkAllTodo","type","id","onChange","e","htmlFor","Footer","counter","onDeleteAll","concat","onClick","TodoForm","state","title","addTodo","event","preventDefault","_this","_this$props","props","onAdd","todoID","completed","setState","onInputChange","target","value","this","action","onSubmit","placeholder","React","Component","TodoItem","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showEditField","isEdit","updateTodo","onEdit","todo","editTodo","textInput","createRef","current","focus","_this2","onDelete","onComplete","_this$state","todoClassList","checked","onDoubleClick","ref","onBlur","onKeyPress","key","TodoList","todos","map","src_TodoItem_TodoItem","TodoFilter","selected","filterTodo","activeFilter","href","split","slice","onFilterClick","isActive","TodoApp","todoList","filter","handleAddTodo","newTodo","prevState","toConsumableArray","handleDeleteTodo","handleEditTodo","newTitle","objectSpread","handleCompleteTodo","handleFilterTodo","filterValue","toggleAllTodo","deleteAllCompleted","getFilteredTodos","localStorage","setItem","JSON","stringify","countCompleted","length","filteredTodoList","src_Header_Header","src_TodoForm_TodoForm","src_Main_Main","src_TodoList_TodoList","src_Footer_Footer","src_TodoFilter_TodoFilter","ReactDOM","render","src_TodoApp","document","getElementById"],"mappings":"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","file":"static/js/main.16243fc3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ children }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n    {children}\n  </header>\n);\n\nHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Header;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Main = ({ children, onMarkAllTodo }) => (\n  <section className=\"main\">\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      onChange={e => onMarkAllTodo(e)}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    {children}\n  </section>\n);\n\nMain.propTypes = {\n  children: PropTypes.node.isRequired,\n  onMarkAllTodo: PropTypes.func.isRequired,\n};\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = ({ children, counter, onDeleteAll }) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      {`${counter} items left`}\n    </span>\n    {children}\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      onClick={() => onDeleteAll()}\n    >\n        clear completed\n    </button>\n  </footer>\n);\n\nFooter.propTypes = {\n  children: PropTypes.node.isRequired,\n  counter: PropTypes.number.isRequired,\n  onDeleteAll: PropTypes.func.isRequired,\n};\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoForm extends React.Component {\n  static propTypes = {\n    todoID: PropTypes.number.isRequired,\n    onAdd: PropTypes.func.isRequired,\n  };\n\n  state = {\n    title: '',\n  };\n\n  addTodo = (event) => {\n    event.preventDefault();\n    const { title } = this.state;\n    const { onAdd, todoID } = this.props;\n\n    onAdd({ id: todoID, title, completed: false });\n    this.setState({ title: '' });\n  };\n\n  onInputChange = ({ target }) => {\n    this.setState({ title: target.value });\n  };\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <form action=\"\" onSubmit={this.addTodo}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.onInputChange}\n          value={title}\n        />\n      </form>\n    );\n  }\n}\nexport default TodoForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      title: this.props.todo.title,\n    };\n    this.textInput = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.textInput.current.focus();\n  }\n\n  showEditField = () => {\n    this.setState({ isEdit: true });\n  };\n\n  updateTodo = (event) => {\n    event.preventDefault();\n    this.setState({ isEdit: false, title: event.target.value });\n    this.props.onEdit(this.props.todo.id, this.state.title);\n  };\n\n  editTodo = ({ target }) => {\n    this.setState({ title: target.value });\n  };\n\n  render() {\n    const { todo, onDelete, onComplete } = this.props;\n    const { title, isEdit } = this.state;\n    let todoClassList = '';\n\n    todoClassList += todo.completed ? 'completed ' : '';\n    todoClassList += isEdit ? 'editing ' : '';\n\n    return (\n      <li className={todoClassList}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={todo.completed}\n            id={todo.id}\n            onChange={() => onComplete(todo.id)}\n          />\n          <label\n            htmlFor=\"todo-1\"\n            onDoubleClick={this.showEditField}\n          >\n            {title}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => onDelete(todo.id)}\n          />\n        </div>\n        <input\n          type=\"text\"\n          value={title}\n          ref={this.textInput}\n          className=\"edit\"\n          onChange={this.editTodo}\n          onBlur={this.updateTodo}\n          onKeyPress={e => (e.key === 'Enter' ? this.updateTodo(e) : 0)}\n        />\n      </li>\n    );\n  }\n}\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  onComplete: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n};\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem/TodoItem';\n\nconst TodoList = ({\n  todos, onComplete, onDelete, onEdit,\n}) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        todo={todo}\n        key={todo.id}\n        onComplete={onComplete}\n        onDelete={onDelete}\n        onEdit={onEdit}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onComplete: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n};\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoFilter extends React.Component {\n  static propTypes = {\n    onFilterClick: PropTypes.func.isRequired,\n  };\n\n  state = {\n    selected: '',\n  };\n\n  filterTodo = (event) => {\n    event.preventDefault();\n    const activeFilter = event.target.href.split('/').slice(-1)[0];\n\n    this.setState({ selected: activeFilter });\n    this.props.onFilterClick(activeFilter);\n  };\n\n  isActive = value => (value === this.state.selected ? 'selected' : '');\n\n  render() {\n    return (\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={this.isActive('')}\n            onClick={this.filterTodo}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className={this.isActive('active')}\n            onClick={this.filterTodo}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className={this.isActive('completed')}\n            onClick={this.filterTodo}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default TodoFilter;\n","import React from 'react';\nimport Header from './Header/Header';\nimport Main from './Main/Main';\nimport Footer from './Footer/Footer';\nimport TodoForm from './TodoForm/TodoForm';\nimport TodoList from './TodoList/TodoList';\nimport TodoFilter from './TodoFilter/TodoFilter';\n\nclass TodoApp extends React.Component {\n  state = {\n    todoList: [],\n    filter: '',\n    todoID: 1,\n  };\n\n  componentDidUpdate() {\n    localStorage.setItem('state', JSON.stringify(this.state));\n  }\n\n  handleAddTodo = (newTodo) => {\n    this.setState(prevState => ({\n      todoList: [...prevState.todoList, newTodo],\n      todoID: prevState.todoID + 1,\n    }));\n  };\n\n  handleDeleteTodo = (id) => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.filter(todo => todo.id !== +id),\n    }));\n  };\n\n  handleEditTodo = (id, newTitle) => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.map(todo => ({\n        ...todo,\n        title: todo.id === +id ? newTitle : todo.title,\n      })),\n    }));\n  };\n\n  handleCompleteTodo = (id) => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.map(todo => ({\n        ...todo,\n        completed: todo.id === +id ? !todo.completed : todo.completed,\n      })),\n    }));\n  };\n\n  handleFilterTodo = (filterValue) => {\n    this.setState({ filter: filterValue });\n  };\n\n  toggleAllTodo = ({ target }) => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.map(todo => ({\n        ...todo, completed: !!target.checked,\n      })),\n    }));\n  };\n\n  deleteAllCompleted = () => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.filter(todo => !todo.completed),\n    }));\n  };\n\n  getFilteredTodos = (todoList, filter) => {\n    switch (filter) {\n      case 'active':\n        return todoList.filter(todo => !todo.completed);\n      case 'completed':\n        return todoList.filter(todo => todo.completed);\n      default:\n        return todoList;\n    }\n  };\n\n  render() {\n    const { todoList, filter, todoID } = this.state;\n    const countCompleted = todoList.filter(todo => !todo.completed).length;\n    const filteredTodoList = filter\n      ? this.getFilteredTodos(todoList, filter)\n      : todoList;\n\n    return (\n      <section className=\"todoapp\">\n        <Header>\n          <TodoForm todoID={todoID} onAdd={this.handleAddTodo} />\n        </Header>\n\n        <Main onMarkAllTodo={this.toggleAllTodo}>\n          <TodoList\n            todos={filteredTodoList}\n            onComplete={this.handleCompleteTodo}\n            onDelete={this.handleDeleteTodo}\n            onEdit={this.handleEditTodo}\n          />\n        </Main>\n\n        <Footer counter={countCompleted} onDeleteAll={this.deleteAllCompleted}>\n          <TodoFilter onFilterClick={this.handleFilterTodo} />\n        </Footer>\n      </section>\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport TodoApp from './TodoApp';\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}