{"version":3,"sources":["TodoForm/TodoForm.js","TodoItem/TodoItem.js","TodoList/TodoList.js","TodoFilter/TodoFilter.js","TodoApp.js","index.js"],"names":["TodoForm","state","title","addTodo","event","preventDefault","_this","_this$props","props","onAdd","id","todoID","completed","setState","onInputChange","_ref","target","value","this","react_default","a","createElement","action","onSubmit","className","placeholder","onChange","React","Component","TodoItem","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","onComplete","todo","deleteTodo","onDelete","showEditField","isEdit","updateTodoOnBlur","onEdit","updateTodoOnEnter","key","editTodo","_ref2","textInput","createRef","current","focus","todoClassList","type","checked","htmlFor","onDoubleClick","onClick","ref","onKeyPress","onBlur","TodoList","todos","map","src_TodoItem_TodoItem","TodoFilter","selected","filterTodo","activeFilter","href","split","slice","onFilterClick","isActive","TodoApp","todoList","filter","handleAddTodo","newTodo","prevState","concat","toConsumableArray","handleDeleteTodo","handleEditTodo","newTitle","objectSpread","handleCompleteTodo","handleFilterTodo","filterValue","toggleAllTodo","deleteAllCompletedTodo","localStorage","setItem","JSON","stringify","_this$state","filteredTodo","src_TodoForm_TodoForm","style","display","src_TodoList_TodoList","length","src_TodoFilter_TodoFilter","ReactDOM","render","src_TodoApp","document","getElementById"],"mappings":"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","file":"static/js/main.5322aa23.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoForm extends React.Component {\n  static propTypes = {\n    todoID: PropTypes.number.isRequired,\n    onAdd: PropTypes.func.isRequired,\n  };\n\n  state = {\n    title: '',\n  };\n\n  addTodo = (event) => {\n    event.preventDefault();\n    const { title } = this.state;\n    const { onAdd, todoID } = this.props;\n\n    onAdd({ id: todoID, title, completed: false });\n    this.setState({ title: '' });\n  };\n\n  onInputChange = ({ target }) => {\n    this.setState({ title: target.value });\n  };\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <form action=\"\" onSubmit={this.addTodo}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.onInputChange}\n          value={title}\n        />\n      </form>\n    );\n  }\n}\nexport default TodoForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      title: this.props.todo.title,\n    };\n    this.textInput = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.textInput.current.focus();\n  }\n\n  handleChange = () => {\n    this.props.onComplete(this.props.todo.id);\n  };\n\n  deleteTodo = () => {\n    this.props.onDelete(this.props.todo.id);\n  };\n\n  showEditField = () => {\n    this.setState({ isEdit: true });\n  };\n\n  updateTodoOnBlur = ({ target }) => {\n    this.setState({ isEdit: false, title: target.value });\n    this.props.onEdit(this.props.todo.id, this.state.title);\n  };\n\n  updateTodoOnEnter = (event) => {\n    if (event.key === 'Enter') {\n      this.setState({ isEdit: false, title: event.target.value });\n      this.props.onEdit(this.props.todo.id, this.state.title);\n    }\n  };\n\n  editTodo = ({ target }) => {\n    this.setState({ title: target.value });\n  };\n\n  render() {\n    const { todo } = this.props;\n    const { title } = this.state;\n    let todoClassList = '';\n\n    todoClassList += todo.completed ? 'completed ' : '';\n    todoClassList += this.state.isEdit ? 'editing ' : '';\n\n    return (\n      <li className={todoClassList}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={todo.completed}\n            id={todo.id}\n            onChange={this.handleChange}\n          />\n          <label\n            htmlFor=\"todo-1\"\n            onDoubleClick={this.showEditField}\n          >\n            {title}\n          </label>\n          <button type=\"button\" className=\"destroy\" onClick={this.deleteTodo} />\n        </div>\n        <input\n          type=\"text\"\n          value={title}\n          ref={this.textInput}\n          className=\"edit\"\n          onChange={this.editTodo}\n          onKeyPress={this.updateTodoOnEnter}\n          onBlur={this.updateTodoOnBlur}\n        />\n      </li>\n    );\n  }\n}\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  onComplete: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n};\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem/TodoItem';\n\nconst TodoList = ({\n  todos, onComplete, onDelete, onEdit,\n}) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        todo={todo}\n        key={todo.id}\n        onComplete={onComplete}\n        onDelete={onDelete}\n        onEdit={onEdit}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onComplete: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n};\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoFilter extends React.Component {\n  static propTypes = {\n    onFilterClick: PropTypes.func.isRequired,\n  };\n\n  state = {\n    selected: '',\n  };\n\n  filterTodo = (event) => {\n    event.preventDefault();\n    const activeFilter = event.target.href.split('/').slice(-1)[0];\n\n    this.setState({ selected: activeFilter });\n    this.props.onFilterClick(activeFilter);\n  };\n\n  isActive = value => (value === this.state.selected ? 'selected' : '');\n\n  render() {\n    return (\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={this.isActive('')}\n            onClick={this.filterTodo}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className={this.isActive('active')}\n            onClick={this.filterTodo}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className={this.isActive('completed')}\n            onClick={this.filterTodo}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default TodoFilter;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport TodoForm from './TodoForm/TodoForm';\nimport TodoList from './TodoList/TodoList';\nimport TodoFilter from './TodoFilter/TodoFilter';\n\nclass TodoApp extends React.Component {\n  state = {\n    todoList: [],\n    filter: '',\n    todoID: 1,\n  };\n\n  componentDidUpdate() {\n    localStorage.setItem('state', JSON.stringify(this.state));\n  }\n\n  handleAddTodo = (newTodo) => {\n    this.setState(prevState => ({\n      todoList: [...prevState.todoList, newTodo],\n      todoID: prevState.todoID + 1,\n    }));\n  };\n\n  handleDeleteTodo = (id) => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.filter(todo => todo.id !== +id),\n    }));\n  };\n\n  handleEditTodo = (id, newTitle) => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.map(todo => ({\n        ...todo,\n        title: todo.id === +id ? newTitle : todo.title,\n      })),\n    }));\n  };\n\n  handleCompleteTodo = (id) => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.map(todo => ({\n        ...todo,\n        completed: todo.id === +id ? !todo.completed : todo.completed,\n      })),\n    }));\n  };\n\n  handleFilterTodo = (filterValue) => {\n    this.setState({ filter: filterValue });\n  };\n\n  toggleAllTodo = ({ target }) => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.map(todo => ({\n        ...todo, completed: !!target.checked,\n      })),\n    }));\n  };\n\n  deleteAllCompletedTodo = () => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.filter(todo => !todo.completed),\n    }));\n  };\n\n  render() {\n    const { todoList, filter, todoID } = this.state;\n    let filteredTodo = [];\n\n    switch (filter) {\n      case 'active':\n        filteredTodo = todoList.filter(todo => !todo.completed);\n\n        break;\n      case 'completed':\n        filteredTodo = todoList.filter(todo => todo.completed);\n\n        break;\n      default:\n        filteredTodo = todoList;\n        break;\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <TodoForm todoID={todoID} onAdd={this.handleAddTodo} />\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={this.toggleAllTodo}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TodoList\n            todos={filteredTodo}\n            onComplete={this.handleCompleteTodo}\n            onDelete={this.handleDeleteTodo}\n            onEdit={this.handleEditTodo}\n          />\n\n        </section>\n\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {`${todoList.filter(todo => !todo.completed).length} items left`}\n          </span>\n\n          <TodoFilter onFilterClick={this.handleFilterTodo} />\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            style={{ display: 'block' }}\n            onClick={this.deleteAllCompletedTodo}\n          >\n            clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport TodoApp from './TodoApp';\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}