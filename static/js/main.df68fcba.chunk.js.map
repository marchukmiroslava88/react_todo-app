{"version":3,"sources":["TodoForm/TodoForm.js","TodoItem/TodoItem.js","TodoList/TodoList.js","TodoFilter/TodoFilter.js","TodoApp.js","index.js"],"names":["TodoForm","state","title","addTodo","event","preventDefault","_this","_this$props","props","onAdd","id","todoID","completed","setState","onInputChange","_ref","target","value","this","react_default","a","createElement","action","onSubmit","className","placeholder","onChange","React","Component","TodoItem","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showEditField","isEdit","updateTodoOnBlur","onEdit","todo","updateTodoOnEnter","key","editTodo","_ref2","textInput","createRef","current","focus","onDelete","onComplete","todoClassList","type","checked","htmlFor","onDoubleClick","onClick","ref","onKeyPress","onBlur","TodoList","todos","map","src_TodoItem_TodoItem","TodoFilter","selected","filterTodo","activeFilter","href","split","slice","onFilterClick","isActive","TodoApp","todoList","filter","handleAddTodo","newTodo","prevState","concat","toConsumableArray","handleDeleteTodo","handleEditTodo","newTitle","objectSpread","handleCompleteTodo","handleFilterTodo","filterValue","toggleAllTodo","deleteAllCompletedTodo","getFilteredTodos","localStorage","setItem","JSON","stringify","_this$state","filteredTodoList","src_TodoForm_TodoForm","style","display","src_TodoList_TodoList","length","src_TodoFilter_TodoFilter","ReactDOM","render","src_TodoApp","document","getElementById"],"mappings":"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","file":"static/js/main.df68fcba.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoForm extends React.Component {\n  static propTypes = {\n    todoID: PropTypes.number.isRequired,\n    onAdd: PropTypes.func.isRequired,\n  };\n\n  state = {\n    title: '',\n  };\n\n  addTodo = (event) => {\n    event.preventDefault();\n    const { title } = this.state;\n    const { onAdd, todoID } = this.props;\n\n    onAdd({ id: todoID, title, completed: false });\n    this.setState({ title: '' });\n  };\n\n  onInputChange = ({ target }) => {\n    this.setState({ title: target.value });\n  };\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <form action=\"\" onSubmit={this.addTodo}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.onInputChange}\n          value={title}\n        />\n      </form>\n    );\n  }\n}\nexport default TodoForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      title: this.props.todo.title,\n    };\n    this.textInput = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.textInput.current.focus();\n  }\n\n  showEditField = () => {\n    this.setState({ isEdit: true });\n  };\n\n  updateTodoOnBlur = ({ target }) => {\n    this.setState({ isEdit: false, title: target.value });\n    this.props.onEdit(this.props.todo.id, this.state.title);\n  };\n\n  updateTodoOnEnter = (event) => {\n    if (event.key === 'Enter') {\n      this.setState({ isEdit: false, title: event.target.value });\n      this.props.onEdit(this.props.todo.id, this.state.title);\n    }\n  };\n\n  editTodo = ({ target }) => {\n    this.setState({ title: target.value });\n  };\n\n  render() {\n    const { todo, onDelete, onComplete } = this.props;\n    const { title } = this.state;\n    let todoClassList = '';\n\n    todoClassList += todo.completed ? 'completed ' : '';\n    todoClassList += this.state.isEdit ? 'editing ' : '';\n\n    return (\n      <li className={todoClassList}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={todo.completed}\n            id={todo.id}\n            onChange={() => onComplete(todo.id)}\n          />\n          <label\n            htmlFor=\"todo-1\"\n            onDoubleClick={this.showEditField}\n          >\n            {title}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => onDelete(todo.id)}\n          />\n        </div>\n        <input\n          type=\"text\"\n          value={title}\n          ref={this.textInput}\n          className=\"edit\"\n          onChange={this.editTodo}\n          onKeyPress={this.updateTodoOnEnter}\n          onBlur={this.updateTodoOnBlur}\n        />\n      </li>\n    );\n  }\n}\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  onComplete: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n};\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem/TodoItem';\n\nconst TodoList = ({\n  todos, onComplete, onDelete, onEdit,\n}) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        todo={todo}\n        key={todo.id}\n        onComplete={onComplete}\n        onDelete={onDelete}\n        onEdit={onEdit}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onComplete: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n};\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoFilter extends React.Component {\n  static propTypes = {\n    onFilterClick: PropTypes.func.isRequired,\n  };\n\n  state = {\n    selected: '',\n  };\n\n  filterTodo = (event) => {\n    event.preventDefault();\n    const activeFilter = event.target.href.split('/').slice(-1)[0];\n\n    this.setState({ selected: activeFilter });\n    this.props.onFilterClick(activeFilter);\n  };\n\n  isActive = value => (value === this.state.selected ? 'selected' : '');\n\n  render() {\n    return (\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={this.isActive('')}\n            onClick={this.filterTodo}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className={this.isActive('active')}\n            onClick={this.filterTodo}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className={this.isActive('completed')}\n            onClick={this.filterTodo}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default TodoFilter;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport TodoForm from './TodoForm/TodoForm';\nimport TodoList from './TodoList/TodoList';\nimport TodoFilter from './TodoFilter/TodoFilter';\n\nclass TodoApp extends React.Component {\n  state = {\n    todoList: [],\n    filter: '',\n    todoID: 1,\n  };\n\n  componentDidUpdate() {\n    localStorage.setItem('state', JSON.stringify(this.state));\n  }\n\n  handleAddTodo = (newTodo) => {\n    this.setState(prevState => ({\n      todoList: [...prevState.todoList, newTodo],\n      todoID: prevState.todoID + 1,\n    }));\n  };\n\n  handleDeleteTodo = (id) => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.filter(todo => todo.id !== +id),\n    }));\n  };\n\n  handleEditTodo = (id, newTitle) => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.map(todo => ({\n        ...todo,\n        title: todo.id === +id ? newTitle : todo.title,\n      })),\n    }));\n  };\n\n  handleCompleteTodo = (id) => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.map(todo => ({\n        ...todo,\n        completed: todo.id === +id ? !todo.completed : todo.completed,\n      })),\n    }));\n  };\n\n  handleFilterTodo = (filterValue) => {\n    this.setState({ filter: filterValue });\n  };\n\n  toggleAllTodo = ({ target }) => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.map(todo => ({\n        ...todo, completed: !!target.checked,\n      })),\n    }));\n  };\n\n  deleteAllCompletedTodo = () => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.filter(todo => !todo.completed),\n    }));\n  };\n\n  getFilteredTodos = (todoList, filter) => {\n    switch (filter) {\n      case 'active':\n        return todoList.filter(todo => !todo.completed);\n      case 'completed':\n        return todoList.filter(todo => todo.completed);\n      default:\n        return todoList;\n    }\n  };\n\n  render() {\n    const { todoList, filter, todoID } = this.state;\n    const filteredTodoList = filter\n      ? this.getFilteredTodos(todoList, filter)\n      : todoList;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <TodoForm todoID={todoID} onAdd={this.handleAddTodo} />\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={this.toggleAllTodo}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TodoList\n            todos={filteredTodoList}\n            onComplete={this.handleCompleteTodo}\n            onDelete={this.handleDeleteTodo}\n            onEdit={this.handleEditTodo}\n          />\n\n        </section>\n\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {`${todoList.filter(todo => !todo.completed).length} items left`}\n          </span>\n\n          <TodoFilter onFilterClick={this.handleFilterTodo} />\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            style={{ display: 'block' }}\n            onClick={this.deleteAllCompletedTodo}\n          >\n            clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport TodoApp from './TodoApp';\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}